// 힙 - 디스크 컨트롤러

import java.util.Arrays;
import java.util.Comparator;
import java.util.PriorityQueue;

class Solution {

	class Job {
		int reqTime;
		int procTime;
		
		Job(int reqTime, int procTime) {
			this.reqTime = reqTime;
			this.procTime = procTime;
		}
	}
	
	public int solution(int[][] jobs) {
		
		int answer = 0;
        
        PriorityQueue<Job> q = new PriorityQueue<Job>(new Comparator<Job>() {
        	public int compare(Job j1, Job j2) {
       			return j1.procTime - j2.procTime;
        	}
        });
        
        Arrays.sort(jobs, new Comparator<int[]>() {
        	public int compare(int[] a, int[] b) {
        		if(a[0] < b[0])
        			return -1;
        		else if(a[0] > b[0])
        			return 1;
        		else 
        			return a[1] - b[1];
        	}
        });
        
        int cnt = 0;
        int time = 0;
        Job j;        
        
        while(cnt < jobs.length || !q.isEmpty()) {
        	
        	if(q.isEmpty() && cnt < jobs.length) {
        		q.offer(new Job(jobs[cnt][0], jobs[cnt][1]));
        		time = jobs[cnt][0];
        		cnt++;
        	}
        	j = q.poll();
        	
        	answer += time - j.reqTime + j.procTime; //경과시간
        	time = time + j.procTime;//총 처리시간
        	
        	for(int i=cnt;i<jobs.length;i++) {
        		if(jobs[i][0] <= time) {
        			q.offer(new Job(jobs[i][0], jobs[i][1]));
        			cnt++;
        		}
        	}
        	
        	
        	        	
        	//System.out.println(j.reqTime +", " + j.procTime);
        	//System.out.println(time +" : " + answer);
        }
        
        
        return (int)Math.floor(answer / jobs.length);
	
    }
}
